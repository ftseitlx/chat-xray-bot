import os
import tempfile
import pytest
from pathlib import Path
import asyncio

from app.services.render import render_to_pdf
from app.config import settings


@pytest.mark.asyncio
async def test_render_to_pdf():
    """Test rendering HTML to PDF"""
    
    # Create a temporary HTML file
    html_content = """
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <title>Test PDF</title>
        <style>
            body { font-family: Arial, sans-serif; margin: 20px; }
            h1 { color: #2c3e50; }
            .content { margin: 20px 0; }
        </style>
    </head>
    <body>
        <h1>Test PDF Document</h1>
        <div class="content">
            <p>This is a test PDF document generated by the Chat X-Ray app.</p>
            <p>This test verifies that the PDF rendering functionality works correctly.</p>
        </div>
    </body>
    </html>
    """
    
    with tempfile.NamedTemporaryFile(mode='w', delete=False, suffix='.html') as html_file:
        html_file.write(html_content)
        html_path = Path(html_file.name)
    
    # Create a temporary output PDF file path
    with tempfile.NamedTemporaryFile(delete=False, suffix='.pdf') as pdf_file:
        pdf_path = Path(pdf_file.name)
    
    try:
        # Save the original WEBHOOK_HOST setting
        original_webhook_host = settings.WEBHOOK_HOST
        settings.WEBHOOK_HOST = None  # Ensure local file path is returned
        
        # Render the PDF
        result_url = await render_to_pdf(html_path, pdf_path)
        
        # Verify the result
        assert result_url is not None
        assert result_url.startswith("file://")
        assert pdf_path.exists()
        assert pdf_path.stat().st_size > 0  # File should not be empty
        
    except Exception as e:
        # If WeasyPrint or wkhtmltopdf is not available, the test should be skipped
        if "WeasyPrint failed" in str(e) and "wkhtmltopdf failed" in str(e):
            pytest.skip("Both WeasyPrint and wkhtmltopdf are not available")
        else:
            raise
            
    finally:
        # Clean up
        if html_path.exists():
            os.unlink(html_path)
        if pdf_path.exists():
            os.unlink(pdf_path)
        
        # Restore original settings
        settings.WEBHOOK_HOST = original_webhook_host 